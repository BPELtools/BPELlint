<?xml version="1.0" encoding="UTF-8"?>
<process
	xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" 
	name="Transaction-rev1-btaRAandAAandTTPv1-role-1"
		    
	xmlns:tns="http://lspi.wiai.uniba.de/prototype/bpel/collaboration/SimpleUseCase/role-1/transaction/rev1-btaRAandAAandTTPv1/1-0" 
	targetNamespace="http://lspi.wiai.uniba.de/prototype/bpel/collaboration/SimpleUseCase/role-1/transaction/rev1-btaRAandAAandTTPv1/1-0"
	
	xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
	
	xmlns:header="http://lspi.wiai.uniba.de/prototype/xsd/header/1-0"
	xmlns:businessDocumentEnvelopes="http://lspi.wiai.uniba.de/prototype/xsd/businessDocumentEnvelopes/1-0"
	xmlns:signals="http://docs.oasis-open.org/ebxml-bp/ebbp-signals-2.0"
	xmlns:event="http://lspi.wiai.uniba.de/prototype/xsd/event/1-0"
	xmlns:timer="http://lspi.wiai.uniba.de/prototype/xsd/service/TimerMessages/1-0"
	xmlns:transactionControlMessages="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"
	>

	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" location="wsdl/Monitoring.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" location="wsdl/BackendClient.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" location="wsdl/TimerClient.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" location="wsdl/PartnerRequestor.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" location="wsdl/BackendCallback.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/correlation/1-0" location="wsdl/Correlation.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/client/1-0" location="wsdl/MasterClient.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" location="wsdl/TimerCallback.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0" location="wsdl/MasterCallback.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0" location="wsdl/PartnerResponder.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
	<import namespace="http://docs.oasis-open.org/ebxml-bp/ebbp-signals-2.0" location="wsdl/xsd/ebbp-signals-2.0.4.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/xsd/service/TimerMessages/1-0" location="wsdl/xsd/ServiceTimerMessages.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/xsd/header/1-0" location="wsdl/xsd/Header.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://www.w3.org/2000/09/xmldsig#" location="wsdl/xsd/xmldsig-core-schema.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0" location="wsdl/xsd/TransactionControlMessages.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/xsd/event/1-0" location="wsdl/xsd/Event.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://lspi.wiai.uniba.de/prototype/xsd/businessDocumentEnvelopes/1-0" location="wsdl/xsd/BusinessDocumentEnvelopes.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	<import namespace="http://www.w3.org/1999/xlink" location="wsdl/xsd/XLink.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
	
	<partnerLinks> 
		<partnerLink name="ToMonitoring" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" partnerLinkType="tns:Monitoring" partnerRole="MonitoringPortTypeRole"/>
		<partnerLink name="ToPartner" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0" partnerLinkType="tns:PartnerResponder" partnerRole="PartnerResponderPortTypeRole"/>
		<partnerLink name="ToMaster" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0" partnerLinkType="tns:MasterCallback" partnerRole="MasterCallbackPortTypeRole"/>
		<partnerLink name="ToBackend" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" partnerLinkType="tns:BackendCallback" partnerRole="BackendCallbackPortTypeRole"/>
		<partnerLink name="FromTimer" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" partnerLinkType="tns:TimerCallback" myRole="TimerCallbackPortTypeRole"/>
		<partnerLink name="FromBackend" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" partnerLinkType="tns:BackendClient" myRole="BackendClientPortTypeRole"/>
		<partnerLink name="FromPartner" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" partnerLinkType="tns:PartnerRequestor" myRole="PartnerRequestorPortTypeRole"/>
		<partnerLink name="ToTimer" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" partnerLinkType="tns:TimerClient" partnerRole="TimerClientPortTypeRole"/>
		<partnerLink name="FromMaster" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/client/1-0" partnerLinkType="tns:MasterClient" myRole="MasterClientPortTypeRole"/>
	</partnerLinks>
	
	
	<correlationSets>
	    <correlationSet name="correlationSet" properties="tns:property_CollaborationIdentifier" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/correlation/1-0"/>
	</correlationSets>	
	
	
	
	<sequence>
		<scope name="MAIN_rev1-btaRAandAAandTTPv1">
			<variables>
				<variable name="bizDoc" element="tns:BusinessDocumentEnvelope" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/businessDocumentEnvelopes/1-0"/>
				
				<variable name="ra" element="tns:ReceiptAcknowledgement" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				
				<variable name="rae" element="tns:ReceiptAcknowledgementException" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				
				<variable name="aa" element="tns:AcceptanceAcknowledgement" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				
				<variable name="aae" element="tns:AcceptanceAcknowledgementException" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				
				<variable name="start" element="tns:Start" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				
				<variable name="exception_to_partner" element="tns:Exception" xmlns:tns="http://docs.oasis-open.org/ebxml-bp/ebbp-signals-2.0"/>
				
				<variable name="exception_to_backend" element="tns:Exception" xmlns:tns="http://docs.oasis-open.org/ebxml-bp/ebbp-signals-2.0"/>
				
				<variable name="protocol_result" type="tns:ProtocolResultType" xmlns:tns="http://lspi.wiai.uniba.de/prototype/xsd/transaction/controlMessages/1-0"/>
				<variable name="event_counter" type="tns:int" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
			</variables>	
			<sequence>
				<scope name="START_rev1-btaRAandAAandTTPv1-INIT-Start">
					<variables>
						<variable name="startFromMaster" messageType="tns:StartMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/client/1-0"/>
					</variables>	
					<sequence>
						<receive name="startFromMaster_rev1-btaRAandAAandTTPv1-INIT-Start" 
								 createInstance="yes" 
								 partnerLink="FromMaster" 
						    	 operation="StartOperation" 
						    	 portType="tns:MasterClientPortType" 
						    	 xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/client/1-0" 
								 variable="startFromMaster" 
						>
							
							<correlations>
								<correlation set="correlationSet" initiate="yes"/>
							</correlations>
						</receive>
						<assign name="After_startFromMaster_COPIES">
							
							<copy>
								<from variable="startFromMaster" part="StartPart" />
								
								<to variable="start" />	
								
							</copy>
						</assign>
						<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-INIT-Start_1">
							<variables>
								<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
							</variables>	
							<faultHandlers>
								<catchAll>
									<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-INIT-Start_1" />
								</catchAll></faultHandlers>
							<sequence>
								<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-INIT-Start_1">
									
									<copy>
										<from>1</from>
										<to variable="event_counter" />	
										
									</copy>
									<copy>
										<from variable="event_counter" />	
										
										<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
										
									</copy>
									<copy>
										<from>xp20:current-dateTime()</from>
										<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
										
									</copy>
									<copy>
										<from>$start/header:TransactionHeader</from>
										
										<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
										
									</copy>
									<copy>
										<from>'Collaboration?start'</from>
										<to>$eventToMonitoring.EventPart/event:Content</to>
										
									</copy>
									<copy>
										<from variable="startFromMaster" part="StartPart" />
										
										<to>$eventToMonitoring.EventPart/event:Payload</to>
										
									</copy>
								</assign>
								<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-INIT-Start_1" 
								        partnerLink="ToMonitoring" 
								        operation="EventOperation" 
								        portType="tns:MonitoringPortType" 
								        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
								        inputVariable="eventToMonitoring" 
								>
								        
								</invoke>  
							</sequence>
						 	
						</scope>
					</sequence>
				 	
				</scope>
				<scope name="AUTOMATON_rev1-btaRAandAAandTTPv1">
					<variables>
						<variable name="state" type="tns:string" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
						<variable name="isFinished" type="tns:boolean" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
						<variable name="delay_for_sending_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" type="tns:duration" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
					</variables>	
					<sequence>
						<assign name="set_default_delay_for_sending_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">
							
							<copy>
								<from>
									<literal>PT3S</literal>
								</from>
								
								<to variable="delay_for_sending_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" />	
								
							</copy>
						</assign>
						<assign name="initiate_loop_variables">
							
							<copy>
								<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-Started'</from>
								<to variable="state" />	
								
							</copy>
							<copy>
								<from>false()</from>
								<to variable="isFinished" />	
								
							</copy>
						</assign>
						<while name="SWITCH_OVER_STATES_rev1-btaRAandAAandTTPv1">
							
							<condition>not($isFinished)</condition>
							<sequence>
								<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction">
									
									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction')</condition>
									
									<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction">
										<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction">
											
											<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction')</condition>
											<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ">
												
												<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ')</condition>
												
												<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ">
													<variables>
														<variable name="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" type="tns:boolean" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
														<variable name="retryCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" type="tns:int" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
														<variable name="errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" type="tns:int" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
													</variables>	
													<sequence>
														<assign name="INITIATE_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															
															<copy>
																<from>false()</from>
																<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																
															</copy>
														</assign>
														<scope name="START_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															<variables>
																<variable name="startToTimerRequest" messageType="tns:StartRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																<variable name="startToTimerResponse" messageType="tns:StartResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
															</variables>	
															<sequence>
																<assign name="BEFORE_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																	
																	<copy>
																		<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																		
																		<to>$startToTimerRequest.StartRequestPart/timer:Identifier</to>
																		
																	</copy>
																	<copy>
																		<from>
																			<literal>P3D</literal>
																		</from>
																		
																		<to>$startToTimerRequest.StartRequestPart/timer:Duration</to>
																		
																	</copy>
																	<copy>
																		<from>
																			<literal>BTA</literal>
																		</from>
																		
																		<to>$startToTimerRequest.StartRequestPart/timer:Type</to>
																		
																	</copy>
																</assign>
																<invoke name="startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" 
																        partnerLink="ToTimer" 
																        operation="StartOperation" 
																        portType="tns:TimerClientPortType" 
																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																        inputVariable="startToTimerRequest" 
																        outputVariable="startToTimerResponse">
																        
																</invoke>  
																<assign name="PLACE_HOLDER_AFTER_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																	
																	<copy>
																		<from variable="startToTimerResponse" part="StartResponsePart" />
																		
																		<to variable="startToTimerResponse" part="StartResponsePart" />
																		
																	</copy>
																</assign>
															</sequence>
														 	
														</scope>
														<assign name="Initiate_retryCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															
															<copy>
																<from>3</from>
																<to variable="retryCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																
															</copy>
														</assign>
														<assign name="Initiate_errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															
															<copy>
																<from>0</from>
																<to variable="errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																
															</copy>
														</assign>
														<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															
															<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ')</condition>
															<sequence>
																<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																	
																	<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA')</condition>
																	
																	<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																		<variables>
																			<variable name="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" type="tns:boolean" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
																		</variables>	
																		<sequence>
																			<assign name="INITIATE_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																				
																				<copy>
																					<from>false()</from>
																					<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" />	
																					
																				</copy>
																			</assign>
																			<scope name="START_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																				<variables>
																					<variable name="startToTimerRequest" messageType="tns:StartRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																					<variable name="startToTimerResponse" messageType="tns:StartResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																				</variables>	
																				<sequence>
																					<assign name="BEFORE_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																						
																						<copy>
																							<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																							
																							<to>$startToTimerRequest.StartRequestPart/timer:Identifier</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>PT2H</literal>
																							</from>
																							
																							<to>$startToTimerRequest.StartRequestPart/timer:Duration</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AA</literal>
																							</from>
																							
																							<to>$startToTimerRequest.StartRequestPart/timer:Type</to>
																							
																						</copy>
																					</assign>
																					<invoke name="startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" 
																					        partnerLink="ToTimer" 
																					        operation="StartOperation" 
																					        portType="tns:TimerClientPortType" 
																					        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																					        inputVariable="startToTimerRequest" 
																					        outputVariable="startToTimerResponse">
																					        
																					</invoke>  
																					<assign name="PLACE_HOLDER_AFTER_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																						
																						<copy>
																							<from variable="startToTimerResponse" part="StartResponsePart" />
																							
																							<to variable="startToTimerResponse" part="StartResponsePart" />
																							
																						</copy>
																					</assign>
																				</sequence>
																			 	
																			</scope>
																			<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																				
																				<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA')</condition>
																				<sequence>
																					<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA">
																						
																						<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA'</condition>
																						
																						<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA">
																							<variables>
																								<variable name="AAFromPartner" messageType="tns:AcceptanceAcknowledgementMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																								<variable name="AAEFromPartner" messageType="tns:AcceptanceAcknowledgementExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																								<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																								<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																								<variable name="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" messageType="tns:OnTimeoutAAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																								<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																							</variables>	
																							<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA">	
																								<onMessage 
																											partnerLink="FromPartner" 
																								        	operation="AcceptanceAcknowledgementOperation" 
																								        	portType="tns:PartnerRequestorPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																								        	variable="AAFromPartner">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_1">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_1" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_1">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Partner?AA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="AAFromPartner" part="AcceptanceAcknowledgementPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_1" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_AAFromPartner_COPIES">
																											
																											<copy>
																												<from variable="AAFromPartner" part="AcceptanceAcknowledgementPart" />
																												
																												<to variable="aa" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_1">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-Commit-DeliverAA'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromPartner" 
																								        	operation="AcceptanceAcknowledgementExceptionOperation" 
																								        	portType="tns:PartnerRequestorPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																								        	variable="AAEFromPartner">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_2">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_2" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_2">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Partner?AAE'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="AAEFromPartner" part="AcceptanceAcknowledgementExceptionPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_2" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_AAEFromPartner_COPIES">
																											
																											<copy>
																												<from variable="AAEFromPartner" part="AcceptanceAcknowledgementExceptionPart" />
																												
																												<to variable="aae" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_2">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-DeliverAAE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromBackend" 
																								        	operation="CancelOperation" 
																								        	portType="tns:BackendClientPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																								        	variable="cancelFromBackend">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_5">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_5" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_5">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Backend?cancel'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="cancelFromBackend" part="CancelPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_5" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_cancelFromBackend_COPIES">
																											
																											<copy>
																												<from>'The business transaction has been canceled'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>Cancelation</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																											<copy>
																												<from variable="cancelFromBackend" part="CancelPart" />
																												
																												<to variable="cancelFromBackend" part="CancelPart" />
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_5">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromPartner" 
																								        	operation="ExceptionOperation" 
																								        	portType="tns:PartnerRequestorPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																								        	variable="GEFromPartner">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_6">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_6" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_6">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Partner?GE'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="GEFromPartner" part="ExceptionPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_6" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_GEFromPartner_COPIES">
																											
																											<copy>
																												<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																												
																												<to variable="exception_to_backend" />	
																												
																											</copy>
																											<copy>
																												<from>'The partner detected an error'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>PartnerError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_6">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromTimer" 
																								        	operation="OnTimeoutAAOperation" 
																								        	portType="tns:TimerCallbackPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																								        	variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_3">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_3" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_3">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'toAA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_3" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="AFTER_TIMEOUT_AA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_COPIES">
																											
																											<copy>
																												<from variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" part="OnTimeoutAAPart" />
																												
																												<to variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" part="OnTimeoutAAPart" />
																												
																											</copy>
																											<copy>
																												<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtaaError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtaaError</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>SignalTimeout</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																											
																											<copy>
																												<from>true()</from>
																												<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_3">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromTimer" 
																								        	operation="OnTimeoutBTAOperation" 
																								        	portType="tns:TimerCallbackPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																								        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_4">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_4" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_4">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'toBTA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_4" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_COPIES">
																											
																											<copy>
																												<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" part="OnTimeoutBTAPart" />
																												
																												<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA" part="OnTimeoutBTAPart" />
																												
																											</copy>
																											<copy>
																												<from>'Timeout while performing business transaction'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtpError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>'Timeout while performing business transaction'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtpError</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																											
																											<copy>
																												<from>true()</from>
																												<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA_4">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								
																							</pick>
																						 	
																						</scope>
																						
																					</if>
																					<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA">
																						
																						<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA'</condition>
																						
																						<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA">
																							<variables>
																								<variable name="RAToBackend" messageType="tns:ReceiptAcknowledgementMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
																								<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																								<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																								<variable name="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" messageType="tns:OnTimeoutAAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																								<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																							</variables>	
																							<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA">	
																								<onMessage 
																											partnerLink="FromBackend" 
																								        	operation="CancelOperation" 
																								        	portType="tns:BackendClientPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																								        	variable="cancelFromBackend">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_4">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_4" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_4">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Backend?cancel'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="cancelFromBackend" part="CancelPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_4" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_cancelFromBackend_COPIES">
																											
																											<copy>
																												<from>'The business transaction has been canceled'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>Cancelation</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																											<copy>
																												<from variable="cancelFromBackend" part="CancelPart" />
																												
																												<to variable="cancelFromBackend" part="CancelPart" />
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_4">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromPartner" 
																								        	operation="ExceptionOperation" 
																								        	portType="tns:PartnerRequestorPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																								        	variable="GEFromPartner">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_5">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_5" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_5">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Partner?GE'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="GEFromPartner" part="ExceptionPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_5" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="After_GEFromPartner_COPIES">
																											
																											<copy>
																												<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																												
																												<to variable="exception_to_backend" />	
																												
																											</copy>
																											<copy>
																												<from>'The partner detected an error'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>PartnerError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_5">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromTimer" 
																								        	operation="OnTimeoutAAOperation" 
																								        	portType="tns:TimerCallbackPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																								        	variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_2">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_2" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_2">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'toAA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_2" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="AFTER_TIMEOUT_AA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_COPIES">
																											
																											<copy>
																												<from variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" part="OnTimeoutAAPart" />
																												
																												<to variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" part="OnTimeoutAAPart" />
																												
																											</copy>
																											<copy>
																												<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtaaError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtaaError</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>SignalTimeout</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																											
																											<copy>
																												<from>true()</from>
																												<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_2">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								<onMessage 
																											partnerLink="FromTimer" 
																								        	operation="OnTimeoutBTAOperation" 
																								        	portType="tns:TimerCallbackPortType" 
																								        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																								        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA">
																								        
																								    
																									
																									<correlations>
																										<correlation set="correlationSet" initiate="no"/>
																									</correlations>	
																									
																									<sequence>
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_3">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_3" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_3">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'toBTA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_3" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_COPIES">
																											
																											<copy>
																												<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" part="OnTimeoutBTAPart" />
																												
																												<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" part="OnTimeoutBTAPart" />
																												
																											</copy>
																											<copy>
																												<from>'Timeout while performing business transaction'</from>
																												<to>$exception_to_backend/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtpError</literal>
																												</from>
																												
																												<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>'Timeout while performing business transaction'</from>
																												<to>$exception_to_partner/signals:Reason</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>TtpError</literal>
																												</from>
																												
																												<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>AnyProtocolFailure</literal>
																												</from>
																												
																												<to variable="protocol_result" />	
																												
																											</copy>
																										</assign>
																										<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																											
																											<copy>
																												<from>true()</from>
																												<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																												
																											</copy>
																										</assign>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_3">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onMessage>
																								
																								<onAlarm>
																									<for>'PT3S'</for>
																									<sequence>
																										<assign name="Before_RAToBackend_COPIES">
																											
																											<copy>
																												<from>$start/header:TransactionHeader</from>
																												
																												<to>$RAToBackend.ReceiptAcknowledgementPart/header:TransactionHeader</to>
																												
																											</copy>
																											<copy>
																												<from variable="ra" />	
																												
																												<to variable="RAToBackend" part="ReceiptAcknowledgementPart" />
																												
																											</copy>
																										</assign>
																										<invoke name="RAToBackend_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA" 
																										        partnerLink="ToBackend" 
																										        operation="ReceiptAcknowledgementOperation" 
																										        portType="tns:BackendCallbackPortType" 
																										        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
																										        inputVariable="RAToBackend" 
																										>
																										        
																										</invoke>  
																										<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_1">
																											<variables>
																												<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																											</variables>	
																											<faultHandlers>
																												<catchAll>
																													<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_1" />
																												</catchAll></faultHandlers>
																											<sequence>
																												<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_1">
																													
																													<copy>
																														<from>$event_counter + 1</from>
																														<to variable="event_counter" />	
																														
																													</copy>
																													<copy>
																														<from variable="event_counter" />	
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																														
																													</copy>
																													<copy>
																														<from>xp20:current-dateTime()</from>
																														<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																														
																													</copy>
																													<copy>
																														<from>$start/header:TransactionHeader</from>
																														
																														<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																														
																													</copy>
																													<copy>
																														<from>'Backend!RA'</from>
																														<to>$eventToMonitoring.EventPart/event:Content</to>
																														
																													</copy>
																													<copy>
																														<from variable="RAToBackend" part="ReceiptAcknowledgementPart" />
																														
																														<to>$eventToMonitoring.EventPart/event:Payload</to>
																														
																													</copy>
																												</assign>
																												<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_1" 
																												        partnerLink="ToMonitoring" 
																												        operation="EventOperation" 
																												        portType="tns:MonitoringPortType" 
																												        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																												        inputVariable="eventToMonitoring" 
																												>
																												        
																												</invoke>  
																											</sequence>
																										 	
																										</scope>
																										<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA_1">
																											
																											<copy>
																												<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-AwaitAA'</from>
																												<to variable="state" />	
																												
																											</copy>
																										</assign>
																									</sequence>
																								</onAlarm>
																							</pick>
																						 	
																						</scope>
																						
																					</if>
																					<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																						
																						<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA')</condition>
																						
																						<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																							<variables>
																								<variable name="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA" type="tns:boolean" xmlns:tns="http://www.w3.org/2001/XMLSchema"/>
																							</variables>	
																							<sequence>
																								<assign name="INITIATE_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																									
																									<copy>
																										<from>false()</from>
																										<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA" />	
																										
																									</copy>
																								</assign>
																								<scope name="START_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																									<variables>
																										<variable name="startToTimerRequest" messageType="tns:StartRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																										<variable name="startToTimerResponse" messageType="tns:StartResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																									</variables>	
																									<sequence>
																										<assign name="BEFORE_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																											
																											<copy>
																												<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																												
																												<to>$startToTimerRequest.StartRequestPart/timer:Identifier</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>PT1H</literal>
																												</from>
																												
																												<to>$startToTimerRequest.StartRequestPart/timer:Duration</to>
																												
																											</copy>
																											<copy>
																												<from>
																													<literal>RA</literal>
																												</from>
																												
																												<to>$startToTimerRequest.StartRequestPart/timer:Type</to>
																												
																											</copy>
																										</assign>
																										<invoke name="startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA" 
																										        partnerLink="ToTimer" 
																										        operation="StartOperation" 
																										        portType="tns:TimerClientPortType" 
																										        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																										        inputVariable="startToTimerRequest" 
																										        outputVariable="startToTimerResponse">
																										        
																										</invoke>  
																										<assign name="PLACE_HOLDER_AFTER_startToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																											
																											<copy>
																												<from variable="startToTimerResponse" part="StartResponsePart" />
																												
																												<to variable="startToTimerResponse" part="StartResponsePart" />
																												
																											</copy>
																										</assign>
																									</sequence>
																								 	
																								</scope>
																								<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																									
																									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA')</condition>
																									<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">
																										
																										<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA'</condition>
																										
																										<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">
																											<variables>
																												<variable name="RAFromPartner" messageType="tns:ReceiptAcknowledgementMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																												<variable name="RAEFromPartner" messageType="tns:ReceiptAcknowledgementExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																												<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																												<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																												<variable name="OnTimeoutRAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" messageType="tns:OnTimeoutRAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																												<variable name="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" messageType="tns:OnTimeoutAAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																												<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																											</variables>	
																											<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">	
																												<onMessage 
																															partnerLink="FromPartner" 
																												        	operation="ReceiptAcknowledgementOperation" 
																												        	portType="tns:PartnerRequestorPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																												        	variable="RAFromPartner">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_1">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_1" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_1">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'Partner?RA'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																	<copy>
																																		<from variable="RAFromPartner" part="ReceiptAcknowledgementPart" />
																																		
																																		<to>$eventToMonitoring.EventPart/event:Payload</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_1" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="After_RAFromPartner_COPIES">
																															
																															<copy>
																																<from variable="RAFromPartner" part="ReceiptAcknowledgementPart" />
																																
																																<to variable="ra" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_1">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-DeliverRA'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromPartner" 
																												        	operation="ReceiptAcknowledgementExceptionOperation" 
																												        	portType="tns:PartnerRequestorPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																												        	variable="RAEFromPartner">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_2">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_2" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_2">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'Partner?RAE'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																	<copy>
																																		<from variable="RAEFromPartner" part="ReceiptAcknowledgementExceptionPart" />
																																		
																																		<to>$eventToMonitoring.EventPart/event:Payload</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_2" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="After_RAEFromPartner_COPIES">
																															
																															<copy>
																																<from variable="RAEFromPartner" part="ReceiptAcknowledgementExceptionPart" />
																																
																																<to variable="rae" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_2">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-DeliverRAE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromBackend" 
																												        	operation="CancelOperation" 
																												        	portType="tns:BackendClientPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																												        	variable="cancelFromBackend">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_6">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_6" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_6">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'Backend?cancel'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																	<copy>
																																		<from variable="cancelFromBackend" part="CancelPart" />
																																		
																																		<to>$eventToMonitoring.EventPart/event:Payload</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_6" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="After_cancelFromBackend_COPIES">
																															
																															<copy>
																																<from>'The business transaction has been canceled'</from>
																																<to>$exception_to_partner/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>Cancelation</literal>
																																</from>
																																
																																<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>AnyProtocolFailure</literal>
																																</from>
																																
																																<to variable="protocol_result" />	
																																
																															</copy>
																															<copy>
																																<from variable="cancelFromBackend" part="CancelPart" />
																																
																																<to variable="cancelFromBackend" part="CancelPart" />
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_6">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromPartner" 
																												        	operation="ExceptionOperation" 
																												        	portType="tns:PartnerRequestorPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																												        	variable="GEFromPartner">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_7">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_7" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_7">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'Partner?GE'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																	<copy>
																																		<from variable="GEFromPartner" part="ExceptionPart" />
																																		
																																		<to>$eventToMonitoring.EventPart/event:Payload</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_7" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="After_GEFromPartner_COPIES">
																															
																															<copy>
																																<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																																
																																<to variable="exception_to_backend" />	
																																
																															</copy>
																															<copy>
																																<from>'The partner detected an error'</from>
																																<to>$exception_to_backend/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>PartnerError</literal>
																																</from>
																																
																																<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>AnyProtocolFailure</literal>
																																</from>
																																
																																<to variable="protocol_result" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_7">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromTimer" 
																												        	operation="OnTimeoutRAOperation" 
																												        	portType="tns:TimerCallbackPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																												        	variable="OnTimeoutRAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_3">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_3" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_3">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'toRA'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_3" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="AFTER_TIMEOUT_RA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_COPIES">
																															
																															<copy>
																																<from variable="OnTimeoutRAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutRAPart" />
																																
																																<to variable="OnTimeoutRAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutRAPart" />
																																
																															</copy>
																															<copy>
																																<from>'Timeout while waiting for ReceiptAcknowledgement'</from>
																																<to>$exception_to_backend/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtarError</literal>
																																</from>
																																
																																<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>'Timeout while waiting for ReceiptAcknowledgement'</from>
																																<to>$exception_to_partner/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtarError</literal>
																																</from>
																																
																																<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>SignalTimeout</literal>
																																</from>
																																
																																<to variable="protocol_result" />	
																																
																															</copy>
																														</assign>
																														<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																															
																															<copy>
																																<from>true()</from>
																																<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_3">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromTimer" 
																												        	operation="OnTimeoutAAOperation" 
																												        	portType="tns:TimerCallbackPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																												        	variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_4">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_4" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_4">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'toAA'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_4" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="AFTER_TIMEOUT_AA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_COPIES">
																															
																															<copy>
																																<from variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutAAPart" />
																																
																																<to variable="OnTimeoutAAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutAAPart" />
																																
																															</copy>
																															<copy>
																																<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																																<to>$exception_to_backend/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtaaError</literal>
																																</from>
																																
																																<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>'Timeout while waiting for AcceptanceAcknowledgement'</from>
																																<to>$exception_to_partner/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtaaError</literal>
																																</from>
																																
																																<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>SignalTimeout</literal>
																																</from>
																																
																																<to variable="protocol_result" />	
																																
																															</copy>
																														</assign>
																														<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																															
																															<copy>
																																<from>true()</from>
																																<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_4">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												<onMessage 
																															partnerLink="FromTimer" 
																												        	operation="OnTimeoutBTAOperation" 
																												        	portType="tns:TimerCallbackPortType" 
																												        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																												        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA">
																												        
																												    
																													
																													<correlations>
																														<correlation set="correlationSet" initiate="no"/>
																													</correlations>	
																													
																													<sequence>
																														<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_5">
																															<variables>
																																<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																															</variables>	
																															<faultHandlers>
																																<catchAll>
																																	<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_5" />
																																</catchAll></faultHandlers>
																															<sequence>
																																<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_5">
																																	
																																	<copy>
																																		<from>$event_counter + 1</from>
																																		<to variable="event_counter" />	
																																		
																																	</copy>
																																	<copy>
																																		<from variable="event_counter" />	
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>xp20:current-dateTime()</from>
																																		<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>$start/header:TransactionHeader</from>
																																		
																																		<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																																		
																																	</copy>
																																	<copy>
																																		<from>'toBTA'</from>
																																		<to>$eventToMonitoring.EventPart/event:Content</to>
																																		
																																	</copy>
																																</assign>
																																<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_5" 
																																        partnerLink="ToMonitoring" 
																																        operation="EventOperation" 
																																        portType="tns:MonitoringPortType" 
																																        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																																        inputVariable="eventToMonitoring" 
																																>
																																        
																																</invoke>  
																															</sequence>
																														 	
																														</scope>
																														<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_COPIES">
																															
																															<copy>
																																<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutBTAPart" />
																																
																																<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA" part="OnTimeoutBTAPart" />
																																
																															</copy>
																															<copy>
																																<from>'Timeout while performing business transaction'</from>
																																<to>$exception_to_backend/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtpError</literal>
																																</from>
																																
																																<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>'Timeout while performing business transaction'</from>
																																<to>$exception_to_partner/signals:Reason</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>TtpError</literal>
																																</from>
																																
																																<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																																
																															</copy>
																															<copy>
																																<from>
																																	<literal>AnyProtocolFailure</literal>
																																</from>
																																
																																<to variable="protocol_result" />	
																																
																															</copy>
																														</assign>
																														<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																															
																															<copy>
																																<from>true()</from>
																																<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																																
																															</copy>
																														</assign>
																														<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA_5">
																															
																															<copy>
																																<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																																<to variable="state" />	
																																
																															</copy>
																														</assign>
																													</sequence>
																												</onMessage>
																												
																											</pick>
																										 	
																										</scope>
																										
																									</if>
																								</while>
																								<if name="IF_NOT_TIMEOUT_OCCURED_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																									
																									<condition>not($hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA)</condition>
																									
																									<scope name="STOP_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																										<variables>
																											<variable name="stopToTimerRequest" messageType="tns:StopRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																											<variable name="stopToTimerResponse" messageType="tns:StopResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																										</variables>	
																										<sequence>
																											<assign name="BEFORE_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																												
																												<copy>
																													<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																													
																													<to>$stopToTimerRequest.StopRequestPart/timer:Identifier</to>
																													
																												</copy>
																												<copy>
																													<from>
																														<literal>RA</literal>
																													</from>
																													
																													<to>$stopToTimerRequest.StopRequestPart/timer:Type</to>
																													
																												</copy>
																											</assign>
																											<invoke name="stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA" 
																											        partnerLink="ToTimer" 
																											        operation="StopOperation" 
																											        portType="tns:TimerClientPortType" 
																											        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																											        inputVariable="stopToTimerRequest" 
																											        outputVariable="stopToTimerResponse">
																											        
																											</invoke>  
																											<assign name="PLACE_HOLDER_AFTER_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA">
																												
																												<copy>
																													<from variable="stopToTimerResponse" part="StopResponsePart" />
																													
																													<to variable="stopToTimerResponse" part="StopResponsePart" />
																													
																												</copy>
																											</assign>
																										</sequence>
																									 	
																									</scope>
																									
																								</if>
																							</sequence>
																						 	
																						</scope>
																						
																					</if>
																				</sequence>
																			</while>
																			<if name="IF_NOT_TIMEOUT_OCCURED_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																				
																				<condition>not($hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA)</condition>
																				
																				<scope name="STOP_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																					<variables>
																						<variable name="stopToTimerRequest" messageType="tns:StopRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																						<variable name="stopToTimerResponse" messageType="tns:StopResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																					</variables>	
																					<sequence>
																						<assign name="BEFORE_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																							
																							<copy>
																								<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																								
																								<to>$stopToTimerRequest.StopRequestPart/timer:Identifier</to>
																								
																							</copy>
																							<copy>
																								<from>
																									<literal>AA</literal>
																								</from>
																								
																								<to>$stopToTimerRequest.StopRequestPart/timer:Type</to>
																								
																							</copy>
																						</assign>
																						<invoke name="stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA" 
																						        partnerLink="ToTimer" 
																						        operation="StopOperation" 
																						        portType="tns:TimerClientPortType" 
																						        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																						        inputVariable="stopToTimerRequest" 
																						        outputVariable="stopToTimerResponse">
																						        
																						</invoke>  
																						<assign name="PLACE_HOLDER_AFTER_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA">
																							
																							<copy>
																								<from variable="stopToTimerResponse" part="StopResponsePart" />
																								
																								<to variable="stopToTimerResponse" part="StopResponsePart" />
																								
																							</copy>
																						</assign>
																					</sequence>
																				 	
																				</scope>
																				
																			</if>
																		</sequence>
																	 	
																	</scope>
																	
																</if>
																<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started">
																	
																	<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-Started'</condition>
																	
																	<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started">
																		<variables>
																			<variable name="solicitBizDocToBackend" messageType="tns:SolicitBusinessDocumentMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
																			<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																			<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																			<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																		</variables>	
																		<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started">	
																			<onMessage 
																						partnerLink="FromBackend" 
																			        	operation="CancelOperation" 
																			        	portType="tns:BackendClientPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																			        	variable="cancelFromBackend">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_3">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_3" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_3">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Backend?cancel'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="cancelFromBackend" part="CancelPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_3" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_cancelFromBackend_COPIES">
																						
																						<copy>
																							<from>'The business transaction has been canceled'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>Cancelation</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																						<copy>
																							<from variable="cancelFromBackend" part="CancelPart" />
																							
																							<to variable="cancelFromBackend" part="CancelPart" />
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_3">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromPartner" 
																			        	operation="ExceptionOperation" 
																			        	portType="tns:PartnerRequestorPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																			        	variable="GEFromPartner">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_4">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_4" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_4">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Partner?GE'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="GEFromPartner" part="ExceptionPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_4" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_GEFromPartner_COPIES">
																						
																						<copy>
																							<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																							
																							<to variable="exception_to_backend" />	
																							
																						</copy>
																						<copy>
																							<from>'The partner detected an error'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>PartnerError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_4">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromTimer" 
																			        	operation="OnTimeoutBTAOperation" 
																			        	portType="tns:TimerCallbackPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																			        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_2">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_2" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_2">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'toBTA'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_2" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_COPIES">
																						
																						<copy>
																							<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started" part="OnTimeoutBTAPart" />
																							
																							<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started" part="OnTimeoutBTAPart" />
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																						
																						<copy>
																							<from>true()</from>
																							<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_2">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			
																			<onAlarm>
																				<for>'PT3S'</for>
																				<sequence>
																					<assign name="Before_solicitBizDocToBackend_COPIES">
																						
																						<copy>
																							<from>$start/header:TransactionHeader</from>
																							
																							<to>$solicitBizDocToBackend.SolicitBusinessDocumentPart/header:TransactionHeader</to>
																							
																						</copy>
																					</assign>
																					<invoke name="solicitBizDocToBackend_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started" 
																					        partnerLink="ToBackend" 
																					        operation="SolicitBusinessDocumentOperation" 
																					        portType="tns:BackendCallbackPortType" 
																					        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
																					        inputVariable="solicitBizDocToBackend" 
																					>
																					        
																					</invoke>  
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_1">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_1" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_1">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Backend!solicitBizDoc'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="solicitBizDocToBackend" part="SolicitBusinessDocumentPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_1" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-Started_1">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onAlarm>
																		</pick>
																	 	
																	</scope>
																	
																</if>
																<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc">
																	
																	<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc'</condition>
																	
																	<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc">
																		<variables>
																			<variable name="BizDocFromBackend" messageType="tns:BusinessDocumentMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																			<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																			<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																			<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																		</variables>	
																		<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc">	
																			<onMessage 
																						partnerLink="FromBackend" 
																			        	operation="BusinessDocumentOperation" 
																			        	portType="tns:BackendClientPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																			        	variable="BizDocFromBackend">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_1">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_1" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_1">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Backend?BizDoc'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="BizDocFromBackend" part="BusinessDocumentPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_1" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_BizDocFromBackend_COPIES">
																						
																						<copy>
																							<from variable="BizDocFromBackend" part="BusinessDocumentPart" />
																							
																							<to variable="bizDoc" />	
																							
																						</copy>
																						<copy>
																							<from>$bizDoc/businessDocumentEnvelopes:Body/businessDocumentEnvelopes:OriginalDocumentDateTime</from>
																							
																							<to>$exception_to_partner/signals:OriginalMessageDateTime</to>
																							
																						</copy>
																						<copy>
																							<from>$bizDoc/businessDocumentEnvelopes:Body/businessDocumentEnvelopes:OriginalDocumentIdentifier</from>
																							
																							<to>$exception_to_partner/signals:OriginalMessageIdentifier</to>
																							
																						</copy>
																						<copy>
																							<from>$bizDoc/businessDocumentEnvelopes:Body/businessDocumentEnvelopes:OriginalDocumentDateTime</from>
																							
																							<to>$exception_to_backend/signals:OriginalMessageDateTime</to>
																							
																						</copy>
																						<copy>
																							<from>$bizDoc/businessDocumentEnvelopes:Body/businessDocumentEnvelopes:OriginalDocumentIdentifier</from>
																							
																							<to>$exception_to_backend/signals:OriginalMessageIdentifier</to>
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_1">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromBackend" 
																			        	operation="CancelOperation" 
																			        	portType="tns:BackendClientPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																			        	variable="cancelFromBackend">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_3">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_3" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_3">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Backend?cancel'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="cancelFromBackend" part="CancelPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_3" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_cancelFromBackend_COPIES">
																						
																						<copy>
																							<from>'The business transaction has been canceled'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>Cancelation</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																						<copy>
																							<from variable="cancelFromBackend" part="CancelPart" />
																							
																							<to variable="cancelFromBackend" part="CancelPart" />
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_3">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromPartner" 
																			        	operation="ExceptionOperation" 
																			        	portType="tns:PartnerRequestorPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																			        	variable="GEFromPartner">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_4">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_4" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_4">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Partner?GE'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="GEFromPartner" part="ExceptionPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_4" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_GEFromPartner_COPIES">
																						
																						<copy>
																							<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																							
																							<to variable="exception_to_backend" />	
																							
																						</copy>
																						<copy>
																							<from>'The partner detected an error'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>PartnerError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_4">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromTimer" 
																			        	operation="OnTimeoutBTAOperation" 
																			        	portType="tns:TimerCallbackPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																			        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_2">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_2" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_2">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'toBTA'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_2" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_COPIES">
																						
																						<copy>
																							<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc" part="OnTimeoutBTAPart" />
																							
																							<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc" part="OnTimeoutBTAPart" />
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																						
																						<copy>
																							<from>true()</from>
																							<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-AwaitBizDoc_2">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			
																		</pick>
																	 	
																	</scope>
																	
																</if>
																<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">
																	
																	<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc'</condition>
																	
																	<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">
																		<variables>
																			<variable name="BizDocToPartner" messageType="tns:BusinessDocumentMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0"/>
																			<variable name="cancelFromBackend" messageType="tns:CancelMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0"/>
																			<variable name="GEFromPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0"/>
																			<variable name="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" messageType="tns:OnTimeoutBTAMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0"/>
																		</variables>	
																		<pick name="SELECT_TRANSITION_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">	
																			<onMessage 
																						partnerLink="FromBackend" 
																			        	operation="CancelOperation" 
																			        	portType="tns:BackendClientPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/client/1-0" 
																			        	variable="cancelFromBackend">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_5">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_5" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_5">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Backend?cancel'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="cancelFromBackend" part="CancelPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_5" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_cancelFromBackend_COPIES">
																						
																						<copy>
																							<from>'The business transaction has been canceled'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>Cancelation</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																						<copy>
																							<from variable="cancelFromBackend" part="CancelPart" />
																							
																							<to variable="cancelFromBackend" part="CancelPart" />
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_5">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromPartner" 
																			        	operation="ExceptionOperation" 
																			        	portType="tns:PartnerRequestorPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/requestor/1-0" 
																			        	variable="GEFromPartner">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_6">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_6" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_6">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Partner?GE'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="GEFromPartner" part="ExceptionPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_6" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="After_GEFromPartner_COPIES">
																						
																						<copy>
																							<from>$GEFromPartner.ExceptionPart/signals:Exception</from>
																							
																							<to variable="exception_to_backend" />	
																							
																						</copy>
																						<copy>
																							<from>'The partner detected an error'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>PartnerError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_6">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			<onMessage 
																						partnerLink="FromTimer" 
																			        	operation="OnTimeoutBTAOperation" 
																			        	portType="tns:TimerCallbackPortType" 
																			        	xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/callback/1-0" 
																			        	variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">
																			        
																			    
																				
																				<correlations>
																					<correlation set="correlationSet" initiate="no"/>
																				</correlations>	
																				
																				<sequence>
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_4">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_4" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_4">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'toBTA'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_4" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="AFTER_TIMEOUT_BTA_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_COPIES">
																						
																						<copy>
																							<from variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" part="OnTimeoutBTAPart" />
																							
																							<to variable="OnTimeoutBTAFromTimer_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" part="OnTimeoutBTAPart" />
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_backend/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>'Timeout while performing business transaction'</from>
																							<to>$exception_to_partner/signals:Reason</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>TtpError</literal>
																							</from>
																							
																							<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																							
																						</copy>
																						<copy>
																							<from>
																								<literal>AnyProtocolFailure</literal>
																							</from>
																							
																							<to variable="protocol_result" />	
																							
																						</copy>
																					</assign>
																					<assign name="HAS_OCCURED_TIMEOUT_variable_hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																						
																						<copy>
																							<from>true()</from>
																							<to variable="hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																							
																						</copy>
																					</assign>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_4">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			</onMessage>
																			
																			<onAlarm>
																				<for>'PT3S'</for>
																				<sequence>
																					<assign name="Before_BizDocToPartner_COPIES">
																						
																						<copy>
																							<from>$start/header:TransactionHeader</from>
																							
																							<to>$BizDocToPartner.BusinessDocumentPart/header:TransactionHeader</to>
																							
																						</copy>
																						<copy>
																							<from variable="bizDoc" />	
																							
																							<to variable="BizDocToPartner" part="BusinessDocumentPart" />
																							
																						</copy>
																					</assign>
																					<scope name="Fail_BizDocToPartner_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_scope">
																						<faultHandlers>
																							<catch faultName="tns:systemFault" xmlns:tns="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" >
																								<sequence>
																									<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_2">
																										<variables>
																											<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																										</variables>	
																										<faultHandlers>
																											<catchAll>
																												<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_2" />
																											</catchAll></faultHandlers>
																										<sequence>
																											<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_2">
																												
																												<copy>
																													<from>$event_counter + 1</from>
																													<to variable="event_counter" />	
																													
																												</copy>
																												<copy>
																													<from variable="event_counter" />	
																													
																													<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																													
																												</copy>
																												<copy>
																													<from>xp20:current-dateTime()</from>
																													<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																													
																												</copy>
																												<copy>
																													<from>$start/header:TransactionHeader</from>
																													
																													<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																													
																												</copy>
																												<copy>
																													<from>'Partner!BizDoc_Fail'</from>
																													<to>$eventToMonitoring.EventPart/event:Content</to>
																													
																												</copy>
																											</assign>
																											<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_2" 
																											        partnerLink="ToMonitoring" 
																											        operation="EventOperation" 
																											        portType="tns:MonitoringPortType" 
																											        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																											        inputVariable="eventToMonitoring" 
																											>
																											        
																											</invoke>  
																										</sequence>
																									 	
																									</scope>
																									<assign name="AFTER_FAIL_OF_SENDING_BizDoc_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_COPIES">
																										
																										<copy>
																											<from>'The business document could not be delivered to the business partner'</from>
																											<to>$exception_to_backend/signals:Reason</to>
																											
																										</copy>
																										<copy>
																											<from>
																												<literal>DeliveryError</literal>
																											</from>
																											
																											<to>$exception_to_backend/signals:ExceptionType/signals:GeneralException</to>
																											
																										</copy>
																										<copy>
																											<from>'The business document could not be delivered to the business partner'</from>
																											<to>$exception_to_partner/signals:Reason</to>
																											
																										</copy>
																										<copy>
																											<from>
																												<literal>DeliveryError</literal>
																											</from>
																											
																											<to>$exception_to_partner/signals:ExceptionType/signals:GeneralException</to>
																											
																										</copy>
																										<copy>
																											<from>
																												<literal>AnyProtocolFailure</literal>
																											</from>
																											
																											<to variable="protocol_result" />	
																											
																										</copy>
																									</assign>
																									<if>
																										<condition>$errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ &lt; $retryCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ</condition>
																										
																										<sequence>
																											<assign name="IncrementVariable_errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																												
																												<copy>
																													<from>$errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ + 1</from>
																													<to variable="errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" />	
																													
																												</copy>
																											</assign>
																											<assign name="set_new_delay_for_sending_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc">
																												
																												<copy>
																													<from>
																														<literal>PT60S</literal>
																													</from>
																													
																													<to variable="delay_for_sending_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" />	
																													
																												</copy>
																											</assign>
																											<empty name="LOOPING_IN_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_2" />
																										</sequence>
																										
																										<else>
																										<if>
																											<condition>$errorCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ &gt;= $retryCount_in_rev1-btaRAandAAandTTPv1-Transaction-REQ</condition>
																											
																											<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_3">
																												
																												<copy>
																													<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</from>
																													<to variable="state" />	
																													
																												</copy>
																											</assign>
																											
																										</if>
																										</else>
																									</if>
																								</sequence>
																							</catch>
																						</faultHandlers>
																						<sequence>
																							<invoke name="BizDocToPartner_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc" 
																							        partnerLink="ToPartner" 
																							        operation="BusinessDocumentOperation" 
																							        portType="tns:PartnerResponderPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0" 
																							        inputVariable="BizDocToPartner" 
																							>
																							        
																							</invoke>  
																							<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_1">
																								<variables>
																									<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																								</variables>	
																								<faultHandlers>
																									<catchAll>
																										<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_1" />
																									</catchAll></faultHandlers>
																								<sequence>
																									<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_1">
																										
																										<copy>
																											<from>$event_counter + 1</from>
																											<to variable="event_counter" />	
																											
																										</copy>
																										<copy>
																											<from variable="event_counter" />	
																											
																											<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																											
																										</copy>
																										<copy>
																											<from>xp20:current-dateTime()</from>
																											<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																											
																										</copy>
																										<copy>
																											<from>$start/header:TransactionHeader</from>
																											
																											<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																											
																										</copy>
																										<copy>
																											<from>'Partner!BizDoc'</from>
																											<to>$eventToMonitoring.EventPart/event:Content</to>
																											
																										</copy>
																										<copy>
																											<from variable="BizDocToPartner" part="BusinessDocumentPart" />
																											
																											<to>$eventToMonitoring.EventPart/event:Payload</to>
																											
																										</copy>
																									</assign>
																									<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_1" 
																									        partnerLink="ToMonitoring" 
																									        operation="EventOperation" 
																									        portType="tns:MonitoringPortType" 
																									        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																									        inputVariable="eventToMonitoring" 
																									>
																									        
																									</invoke>  
																								</sequence>
																							 	
																							</scope>
																							<assign name="goto_state_rev1-btaRAandAAandTTPv1-Transaction-REQ-DeliverBizDoc_1">
																								
																								<copy>
																									<from>'rev1-btaRAandAAandTTPv1-Transaction-REQ-timeoutAA-timeoutRA-AwaitRA'</from>
																									<to variable="state" />	
																									
																								</copy>
																							</assign>
																						</sequence>
																					 	
																					</scope>
																				</sequence>
																			</onAlarm>
																		</pick>
																	 	
																	</scope>
																	
																</if>
															</sequence>
														</while>
														<if name="IF_NOT_TIMEOUT_OCCURED_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
															
															<condition>not($hasTimeoutOccured_in_rev1-btaRAandAAandTTPv1-Transaction-REQ)</condition>
															
															<scope name="STOP_TIMEOUT_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																<variables>
																	<variable name="stopToTimerRequest" messageType="tns:StopRequestMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																	<variable name="stopToTimerResponse" messageType="tns:StopResponseMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0"/>
																</variables>	
																<sequence>
																	<assign name="BEFORE_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																		
																		<copy>
																			<from>$start/header:TransactionHeader/header:InstanceIdentifier</from>
																			
																			<to>$stopToTimerRequest.StopRequestPart/timer:Identifier</to>
																			
																		</copy>
																		<copy>
																			<from>
																				<literal>BTA</literal>
																			</from>
																			
																			<to>$stopToTimerRequest.StopRequestPart/timer:Type</to>
																			
																		</copy>
																	</assign>
																	<invoke name="stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ" 
																	        partnerLink="ToTimer" 
																	        operation="StopOperation" 
																	        portType="tns:TimerClientPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/timer/client/1-0" 
																	        inputVariable="stopToTimerRequest" 
																	        outputVariable="stopToTimerResponse">
																	        
																	</invoke>  
																	<assign name="PLACE_HOLDER_AFTER_stopToTimerRequest_with_response_in_rev1-btaRAandAAandTTPv1-Transaction-REQ">
																		
																		<copy>
																			<from variable="stopToTimerResponse" part="StopResponsePart" />
																			
																			<to variable="stopToTimerResponse" part="StopResponsePart" />
																			
																		</copy>
																	</assign>
																</sequence>
															 	
															</scope>
															
														</if>
													</sequence>
												 	
												</scope>
												
											</if>
										</while>
									 	
									</scope>
									
								</if>
								<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort">
									
									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort')</condition>
									
									<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort">
										<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort">
											
											<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort')</condition>
											<sequence>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-DeliverRAE">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-DeliverRAE'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-DeliverRAE">
														<variables>
															<variable name="RAEToBackend" messageType="tns:ReceiptAcknowledgementExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
														</variables>	
														<sequence>
															<assign name="Before_RAEToBackend_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$RAEToBackend.ReceiptAcknowledgementExceptionPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from variable="rae" />	
																	
																	<to variable="RAEToBackend" part="ReceiptAcknowledgementExceptionPart" />
																	
																</copy>
															</assign>
															<invoke name="RAEToBackend_rev1-btaRAandAAandTTPv1-abort-DeliverRAE" 
															        partnerLink="ToBackend" 
															        operation="ReceiptAcknowledgementExceptionOperation" 
															        portType="tns:BackendCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
															        inputVariable="RAEToBackend" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-DeliverRAE_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-DeliverRAE_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-DeliverRAE_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Backend!RAE'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="RAEToBackend" part="ReceiptAcknowledgementExceptionPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-DeliverRAE_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-DeliverRAE_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-DeliverAAE">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-DeliverAAE'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-DeliverAAE">
														<variables>
															<variable name="AAEToBackend" messageType="tns:AcceptanceAcknowledgementExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
														</variables>	
														<sequence>
															<assign name="Before_AAEToBackend_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$AAEToBackend.AcceptanceAcknowledgementExceptionPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from variable="aae" />	
																	
																	<to variable="AAEToBackend" part="AcceptanceAcknowledgementExceptionPart" />
																	
																</copy>
															</assign>
															<invoke name="AAEToBackend_rev1-btaRAandAAandTTPv1-abort-DeliverAAE" 
															        partnerLink="ToBackend" 
															        operation="AcceptanceAcknowledgementExceptionOperation" 
															        portType="tns:BackendCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
															        inputVariable="AAEToBackend" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-DeliverAAE_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-DeliverAAE_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-DeliverAAE_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Backend!AAE'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="AAEToBackend" part="AcceptanceAcknowledgementExceptionPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-DeliverAAE_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-DeliverAAE_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
												<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-partner">
													
													<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-partner')</condition>
													
													<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-partner">
														<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-partner">
															
															<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-partner')</condition>
															<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE">
																
																<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE'</condition>
																
																<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE">
																	<variables>
																		<variable name="GEToBackend" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
																	</variables>	
																	<sequence>
																		<assign name="Before_GEToBackend_COPIES">
																			
																			<copy>
																				<from>$start/header:TransactionHeader</from>
																				
																				<to>$GEToBackend.ExceptionPart/header:TransactionHeader</to>
																				
																			</copy>
																			<copy>
																				<from variable="exception_to_backend" />	
																				
																				<to>$GEToBackend.ExceptionPart/signals:Exception</to>
																				
																			</copy>
																			<copy>
																				<from>xp20:current-dateTime()</from>
																				<to>$GEToBackend.ExceptionPart/signals:Exception/signals:ThisMessageDateTime</to>
																				
																			</copy>
																		</assign>
																		<invoke name="GEToBackend_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE" 
																		        partnerLink="ToBackend" 
																		        operation="ExceptionOperation" 
																		        portType="tns:BackendCallbackPortType" 
																		        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
																		        inputVariable="GEToBackend" 
																		>
																		        
																		</invoke>  
																		<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE_1">
																			<variables>
																				<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																			</variables>	
																			<faultHandlers>
																				<catchAll>
																					<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE_1" />
																				</catchAll></faultHandlers>
																			<sequence>
																				<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE_1">
																					
																					<copy>
																						<from>$event_counter + 1</from>
																						<to variable="event_counter" />	
																						
																					</copy>
																					<copy>
																						<from variable="event_counter" />	
																						
																						<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																						
																					</copy>
																					<copy>
																						<from>xp20:current-dateTime()</from>
																						<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																						
																					</copy>
																					<copy>
																						<from>$start/header:TransactionHeader</from>
																						
																						<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																						
																					</copy>
																					<copy>
																						<from>'Backend!GE'</from>
																						<to>$eventToMonitoring.EventPart/event:Content</to>
																						
																					</copy>
																					<copy>
																						<from variable="GEToBackend" part="ExceptionPart" />
																						
																						<to>$eventToMonitoring.EventPart/event:Payload</to>
																						
																					</copy>
																				</assign>
																				<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE_1" 
																				        partnerLink="ToMonitoring" 
																				        operation="EventOperation" 
																				        portType="tns:MonitoringPortType" 
																				        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																				        inputVariable="eventToMonitoring" 
																				>
																				        
																				</invoke>  
																			</sequence>
																		 	
																		</scope>
																		<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-partner-Partner-GE_1">
																			
																			<copy>
																				<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																				<to variable="state" />	
																				
																			</copy>
																		</assign>
																	</sequence>
																 	
																</scope>
																
															</if>
														</while>
													 	
													</scope>
													
												</if>
												<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-transaction">
													
													<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-transaction')</condition>
													
													<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-transaction">
														<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-transaction">
															
															<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-transaction')</condition>
															<sequence>
																<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE">
																	
																	<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE'</condition>
																	
																	<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE">
																		<variables>
																			<variable name="GEToBackend" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
																		</variables>	
																		<sequence>
																			<assign name="Before_GEToBackend_COPIES">
																				
																				<copy>
																					<from>$start/header:TransactionHeader</from>
																					
																					<to>$GEToBackend.ExceptionPart/header:TransactionHeader</to>
																					
																				</copy>
																				<copy>
																					<from variable="exception_to_backend" />	
																					
																					<to>$GEToBackend.ExceptionPart/signals:Exception</to>
																					
																				</copy>
																				<copy>
																					<from>xp20:current-dateTime()</from>
																					<to>$GEToBackend.ExceptionPart/signals:Exception/signals:ThisMessageDateTime</to>
																					
																				</copy>
																			</assign>
																			<invoke name="GEToBackend_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE" 
																			        partnerLink="ToBackend" 
																			        operation="ExceptionOperation" 
																			        portType="tns:BackendCallbackPortType" 
																			        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
																			        inputVariable="GEToBackend" 
																			>
																			        
																			</invoke>  
																			<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE_1">
																				<variables>
																					<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																				</variables>	
																				<faultHandlers>
																					<catchAll>
																						<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE_1" />
																					</catchAll></faultHandlers>
																				<sequence>
																					<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE_1">
																						
																						<copy>
																							<from>$event_counter + 1</from>
																							<to variable="event_counter" />	
																							
																						</copy>
																						<copy>
																							<from variable="event_counter" />	
																							
																							<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																							
																						</copy>
																						<copy>
																							<from>xp20:current-dateTime()</from>
																							<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																							
																						</copy>
																						<copy>
																							<from>$start/header:TransactionHeader</from>
																							
																							<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																							
																						</copy>
																						<copy>
																							<from>'Backend!GE'</from>
																							<to>$eventToMonitoring.EventPart/event:Content</to>
																							
																						</copy>
																						<copy>
																							<from variable="GEToBackend" part="ExceptionPart" />
																							
																							<to>$eventToMonitoring.EventPart/event:Payload</to>
																							
																						</copy>
																					</assign>
																					<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE_1" 
																					        partnerLink="ToMonitoring" 
																					        operation="EventOperation" 
																					        portType="tns:MonitoringPortType" 
																					        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																					        inputVariable="eventToMonitoring" 
																					>
																					        
																					</invoke>  
																				</sequence>
																			 	
																			</scope>
																			<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE_1">
																				
																				<copy>
																					<from>'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2'</from>
																					<to variable="state" />	
																					
																				</copy>
																			</assign>
																		</sequence>
																	 	
																	</scope>
																	
																</if>
																<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2">
																	
																	<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2'</condition>
																	
																	<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2">
																		<variables>
																			<variable name="GEToPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0"/>
																		</variables>	
																		<sequence>
																			<assign name="Before_GEToPartner_COPIES">
																				
																				<copy>
																					<from>$start/header:TransactionHeader</from>
																					
																					<to>$GEToPartner.ExceptionPart/header:TransactionHeader</to>
																					
																				</copy>
																				<copy>
																					<from variable="exception_to_partner" />	
																					
																					<to>$GEToPartner.ExceptionPart/signals:Exception</to>
																					
																				</copy>
																				<copy>
																					<from>xp20:current-dateTime()</from>
																					<to>$GEToPartner.ExceptionPart/signals:Exception/signals:ThisMessageDateTime</to>
																					
																				</copy>
																			</assign>
																			<scope name="Fail_GEToPartner_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_scope">
																				<faultHandlers>
																					<catch faultName="tns:systemFault" xmlns:tns="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" >
																						<sequence>
																							<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2">
																								<variables>
																									<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																								</variables>	
																								<faultHandlers>
																									<catchAll>
																										<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2" />
																									</catchAll></faultHandlers>
																								<sequence>
																									<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2">
																										
																										<copy>
																											<from>$event_counter + 1</from>
																											<to variable="event_counter" />	
																											
																										</copy>
																										<copy>
																											<from variable="event_counter" />	
																											
																											<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																											
																										</copy>
																										<copy>
																											<from>xp20:current-dateTime()</from>
																											<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																											
																										</copy>
																										<copy>
																											<from>$start/header:TransactionHeader</from>
																											
																											<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																											
																										</copy>
																										<copy>
																											<from>'Partner!GE_Fail'</from>
																											<to>$eventToMonitoring.EventPart/event:Content</to>
																											
																										</copy>
																									</assign>
																									<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2" 
																									        partnerLink="ToMonitoring" 
																									        operation="EventOperation" 
																									        portType="tns:MonitoringPortType" 
																									        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																									        inputVariable="eventToMonitoring" 
																									>
																									        
																									</invoke>  
																								</sequence>
																							 	
																							</scope>
																							<empty name="FAIL_PARALLEL_TO_SENDING_FROM_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2" />
																							<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_2">
																								
																								<copy>
																									<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																									<to variable="state" />	
																									
																								</copy>
																							</assign>
																						</sequence>
																					</catch>
																				</faultHandlers>
																				<sequence>
																					<invoke name="GEToPartner_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2" 
																					        partnerLink="ToPartner" 
																					        operation="ExceptionOperation" 
																					        portType="tns:PartnerResponderPortType" 
																					        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0" 
																					        inputVariable="GEToPartner" 
																					>
																					        
																					</invoke>  
																					<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_1">
																						<variables>
																							<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																						</variables>	
																						<faultHandlers>
																							<catchAll>
																								<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_1" />
																							</catchAll></faultHandlers>
																						<sequence>
																							<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_1">
																								
																								<copy>
																									<from>$event_counter + 1</from>
																									<to variable="event_counter" />	
																									
																								</copy>
																								<copy>
																									<from variable="event_counter" />	
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																									
																								</copy>
																								<copy>
																									<from>xp20:current-dateTime()</from>
																									<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																									
																								</copy>
																								<copy>
																									<from>$start/header:TransactionHeader</from>
																									
																									<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																									
																								</copy>
																								<copy>
																									<from>'Partner!GE'</from>
																									<to>$eventToMonitoring.EventPart/event:Content</to>
																									
																								</copy>
																								<copy>
																									<from variable="GEToPartner" part="ExceptionPart" />
																									
																									<to>$eventToMonitoring.EventPart/event:Payload</to>
																									
																								</copy>
																							</assign>
																							<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_1" 
																							        partnerLink="ToMonitoring" 
																							        operation="EventOperation" 
																							        portType="tns:MonitoringPortType" 
																							        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																							        inputVariable="eventToMonitoring" 
																							>
																							        
																							</invoke>  
																						</sequence>
																					 	
																					</scope>
																					<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-transaction-CP-GE2_1">
																						
																						<copy>
																							<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																							<to variable="state" />	
																							
																						</copy>
																					</assign>
																				</sequence>
																			 	
																			</scope>
																		</sequence>
																	 	
																	</scope>
																	
																</if>
															</sequence>
														</while>
													 	
													</scope>
													
												</if>
												<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-backend">
													
													<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-backend')</condition>
													
													<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-backend">
														<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-abort-backend">
															
															<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-abort-backend')</condition>
															<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE">
																
																<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-abort-backend-BE-GE'</condition>
																
																<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE">
																	<variables>
																		<variable name="GEToPartner" messageType="tns:ExceptionMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0"/>
																	</variables>	
																	<sequence>
																		<assign name="Before_GEToPartner_COPIES">
																			
																			<copy>
																				<from>$start/header:TransactionHeader</from>
																				
																				<to>$GEToPartner.ExceptionPart/header:TransactionHeader</to>
																				
																			</copy>
																			<copy>
																				<from variable="exception_to_partner" />	
																				
																				<to>$GEToPartner.ExceptionPart/signals:Exception</to>
																				
																			</copy>
																			<copy>
																				<from>xp20:current-dateTime()</from>
																				<to>$GEToPartner.ExceptionPart/signals:Exception/signals:ThisMessageDateTime</to>
																				
																			</copy>
																		</assign>
																		<scope name="Fail_GEToPartner_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_scope">
																			<faultHandlers>
																				<catch faultName="tns:systemFault" xmlns:tns="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" >
																					<sequence>
																						<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2">
																							<variables>
																								<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																							</variables>	
																							<faultHandlers>
																								<catchAll>
																									<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2" />
																								</catchAll></faultHandlers>
																							<sequence>
																								<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2">
																									
																									<copy>
																										<from>$event_counter + 1</from>
																										<to variable="event_counter" />	
																										
																									</copy>
																									<copy>
																										<from variable="event_counter" />	
																										
																										<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																										
																									</copy>
																									<copy>
																										<from>xp20:current-dateTime()</from>
																										<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																										
																									</copy>
																									<copy>
																										<from>$start/header:TransactionHeader</from>
																										
																										<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																										
																									</copy>
																									<copy>
																										<from>'Partner!GE_Fail'</from>
																										<to>$eventToMonitoring.EventPart/event:Content</to>
																										
																									</copy>
																								</assign>
																								<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2" 
																								        partnerLink="ToMonitoring" 
																								        operation="EventOperation" 
																								        portType="tns:MonitoringPortType" 
																								        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																								        inputVariable="eventToMonitoring" 
																								>
																								        
																								</invoke>  
																							</sequence>
																						 	
																						</scope>
																						<empty name="FAIL_PARALLEL_TO_SENDING_FROM_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2" />
																						<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_2">
																							
																							<copy>
																								<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																								<to variable="state" />	
																								
																							</copy>
																						</assign>
																					</sequence>
																				</catch>
																			</faultHandlers>
																			<sequence>
																				<invoke name="GEToPartner_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE" 
																				        partnerLink="ToPartner" 
																				        operation="ExceptionOperation" 
																				        portType="tns:PartnerResponderPortType" 
																				        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/partner/responder/1-0" 
																				        inputVariable="GEToPartner" 
																				>
																				        
																				</invoke>  
																				<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_1">
																					<variables>
																						<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																					</variables>	
																					<faultHandlers>
																						<catchAll>
																							<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_1" />
																						</catchAll></faultHandlers>
																					<sequence>
																						<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_1">
																							
																							<copy>
																								<from>$event_counter + 1</from>
																								<to variable="event_counter" />	
																								
																							</copy>
																							<copy>
																								<from variable="event_counter" />	
																								
																								<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																								
																							</copy>
																							<copy>
																								<from>xp20:current-dateTime()</from>
																								<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																								
																							</copy>
																							<copy>
																								<from>$start/header:TransactionHeader</from>
																								
																								<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																								
																							</copy>
																							<copy>
																								<from>'Partner!GE'</from>
																								<to>$eventToMonitoring.EventPart/event:Content</to>
																								
																							</copy>
																							<copy>
																								<from variable="GEToPartner" part="ExceptionPart" />
																								
																								<to>$eventToMonitoring.EventPart/event:Payload</to>
																								
																							</copy>
																						</assign>
																						<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_1" 
																						        partnerLink="ToMonitoring" 
																						        operation="EventOperation" 
																						        portType="tns:MonitoringPortType" 
																						        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																						        inputVariable="eventToMonitoring" 
																						>
																						        
																						</invoke>  
																					</sequence>
																				 	
																				</scope>
																				<assign name="goto_state_rev1-btaRAandAAandTTPv1-abort-backend-BE-GE_1">
																					
																					<copy>
																						<from>'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</from>
																						<to variable="state" />	
																						
																					</copy>
																				</assign>
																			</sequence>
																		 	
																		</scope>
																	</sequence>
																 	
																</scope>
																
															</if>
														</while>
													 	
													</scope>
													
												</if>
											</sequence>
										</while>
									 	
									</scope>
									
								</if>
								<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Commit">
									
									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Commit')</condition>
									
									<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Commit">
										<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Commit">
											
											<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Commit')</condition>
											<sequence>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Commit-DeliverAA">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Commit-DeliverAA'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Commit-DeliverAA">
														<variables>
															<variable name="AAToBackend" messageType="tns:AcceptanceAcknowledgementMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
														</variables>	
														<sequence>
															<assign name="Before_AAToBackend_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$AAToBackend.AcceptanceAcknowledgementPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from variable="aa" />	
																	
																	<to variable="AAToBackend" part="AcceptanceAcknowledgementPart" />
																	
																</copy>
															</assign>
															<invoke name="AAToBackend_rev1-btaRAandAAandTTPv1-Commit-DeliverAA" 
															        partnerLink="ToBackend" 
															        operation="AcceptanceAcknowledgementOperation" 
															        portType="tns:BackendCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
															        inputVariable="AAToBackend" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Commit-DeliverAA_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Commit-DeliverAA_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Commit-DeliverAA_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Backend!AA'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="AAToBackend" part="AcceptanceAcknowledgementPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Commit-DeliverAA_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-Commit-DeliverAA_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Commit-Propagate'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Commit-Propagate">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Commit-Propagate'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Commit-Propagate">
														<variables>
															<variable name="persistToBackend" messageType="tns:PersistMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0"/>
														</variables>	
														<sequence>
															<assign name="Before_persistToBackend_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$persistToBackend.PersistPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from>
																		<literal>ProtocolSuccess</literal>
																	</from>
																	
																	<to variable="protocol_result" />	
																	
																</copy>
															</assign>
															<invoke name="persistToBackend_rev1-btaRAandAAandTTPv1-Commit-Propagate" 
															        partnerLink="ToBackend" 
															        operation="PersistOperation" 
															        portType="tns:BackendCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/backend/callback/1-0" 
															        inputVariable="persistToBackend" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Commit-Propagate_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Commit-Propagate_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Commit-Propagate_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Backend!persist'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="persistToBackend" part="PersistPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Commit-Propagate_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-Commit-Propagate_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Success-DeliverResult'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
											</sequence>
										</while>
									 	
									</scope>
									
								</if>
								<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Success">
									
									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Success')</condition>
									
									<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Success">
										<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Success">
											
											<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Success')</condition>
											<sequence>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Success-DeliverResult">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Success-DeliverResult'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Success-DeliverResult">
														<variables>
															<variable name="resultToMaster" messageType="tns:ResultMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0"/>
														</variables>	
														<sequence>
															<if>
																<condition>$protocol_result = 'ProtocolSuccess'</condition>
																
																<assign>
																	<copy>
																		<from>$bizDoc/businessDocumentEnvelopes:Body</from>
																		
																		<to>$resultToMaster.ResultPart/transactionControlMessages:Body</to>
																		
																	</copy>
																</assign>
																
															</if>
															<assign name="Before_resultToMaster_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$resultToMaster.ResultPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from variable="protocol_result" />	
																	
																	<to>$resultToMaster.ResultPart/transactionControlMessages:ProtocolResult</to>
																	
																</copy>
															</assign>
															<invoke name="resultToMaster_rev1-btaRAandAAandTTPv1-Success-DeliverResult" 
															        partnerLink="ToMaster" 
															        operation="ResultOperation" 
															        portType="tns:MasterCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0" 
															        inputVariable="resultToMaster" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Success-DeliverResult_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Success-DeliverResult_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Success-DeliverResult_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Collaboration!result'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="resultToMaster" part="ResultPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Success-DeliverResult_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-Success-DeliverResult_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Success-Success'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Success-Success">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Success-Success'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Success-Success">
														<assign name="EXIT_LOOP_in_rev1-btaRAandAAandTTPv1-Success-Success">
															
															<copy>
																<from>true()</from>
																<to variable="isFinished" />	
																
															</copy>
														</assign>
													 	
													</scope>
													
												</if>
											</sequence>
										</while>
									 	
									</scope>
									
								</if>
								<if name="COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Failure">
									
									<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Failure')</condition>
									
									<scope name="SCOPE_FOR_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Failure">
										<while name="LOOP_INSIDE_COMPOSITE_STATE_rev1-btaRAandAAandTTPv1-Failure">
											
											<condition>not($isFinished) and starts-with($state,'rev1-btaRAandAAandTTPv1-Failure')</condition>
											<sequence>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Failure-DeliverResult">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Failure-DeliverResult'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Failure-DeliverResult">
														<variables>
															<variable name="resultToMaster" messageType="tns:ResultMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0"/>
														</variables>	
														<sequence>
															<if>
																<condition>$protocol_result = 'ProtocolSuccess'</condition>
																
																<assign>
																	<copy>
																		<from>$bizDoc/businessDocumentEnvelopes:Body</from>
																		
																		<to>$resultToMaster.ResultPart/transactionControlMessages:Body</to>
																		
																	</copy>
																</assign>
																
															</if>
															<assign name="Before_resultToMaster_COPIES">
																
																<copy>
																	<from>$start/header:TransactionHeader</from>
																	
																	<to>$resultToMaster.ResultPart/header:TransactionHeader</to>
																	
																</copy>
																<copy>
																	<from variable="protocol_result" />	
																	
																	<to>$resultToMaster.ResultPart/transactionControlMessages:ProtocolResult</to>
																	
																</copy>
															</assign>
															<invoke name="resultToMaster_rev1-btaRAandAAandTTPv1-Failure-DeliverResult" 
															        partnerLink="ToMaster" 
															        operation="ResultOperation" 
															        portType="tns:MasterCallbackPortType" 
															        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/master/callback/1-0" 
															        inputVariable="resultToMaster" 
															>
															        
															</invoke>  
															<scope name="MONITORING_in_rev1-btaRAandAAandTTPv1-Failure-DeliverResult_1">
																<variables>
																	<variable name="eventToMonitoring" messageType="tns:EventMessage" xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0"/>
																</variables>	
																<faultHandlers>
																	<catchAll>
																		<empty name="SWALLOW_ANY_ERRORS_in_rev1-btaRAandAAandTTPv1-Failure-DeliverResult_1" />
																	</catchAll></faultHandlers>
																<sequence>
																	<assign name="prepare_eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Failure-DeliverResult_1">
																		
																		<copy>
																			<from>$event_counter + 1</from>
																			<to variable="event_counter" />	
																			
																		</copy>
																		<copy>
																			<from variable="event_counter" />	
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:EventCounter</to>
																			
																		</copy>
																		<copy>
																			<from>xp20:current-dateTime()</from>
																			<to>$eventToMonitoring.EventPart/event:Identifier/event:Timestamp</to>
																			
																		</copy>
																		<copy>
																			<from>$start/header:TransactionHeader</from>
																			
																			<to>$eventToMonitoring.EventPart/event:Identifier/header:TransactionHeader</to>
																			
																		</copy>
																		<copy>
																			<from>'Collaboration!result'</from>
																			<to>$eventToMonitoring.EventPart/event:Content</to>
																			
																		</copy>
																		<copy>
																			<from variable="resultToMaster" part="ResultPart" />
																			
																			<to>$eventToMonitoring.EventPart/event:Payload</to>
																			
																		</copy>
																	</assign>
																	<invoke name="eventToMonitoring_invoke_in_rev1-btaRAandAAandTTPv1-Failure-DeliverResult_1" 
																	        partnerLink="ToMonitoring" 
																	        operation="EventOperation" 
																	        portType="tns:MonitoringPortType" 
																	        xmlns:tns="http://lspi.wiai.uniba.de/prototype/wsdl/collaboration/transaction/monitoring/1-0" 
																	        inputVariable="eventToMonitoring" 
																	>
																	        
																	</invoke>  
																</sequence>
															 	
															</scope>
															<assign name="goto_state_rev1-btaRAandAAandTTPv1-Failure-DeliverResult_1">
																
																<copy>
																	<from>'rev1-btaRAandAAandTTPv1-Failure-Failure'</from>
																	<to variable="state" />	
																	
																</copy>
															</assign>
														</sequence>
													 	
													</scope>
													
												</if>
												<if name="IF_FOR_STATE_rev1-btaRAandAAandTTPv1-Failure-Failure">
													
													<condition>not ($isFinished) and $state = 'rev1-btaRAandAAandTTPv1-Failure-Failure'</condition>
													
													<scope name="BODY_FOR_STATE_rev1-btaRAandAAandTTPv1-Failure-Failure">
														<assign name="EXIT_LOOP_in_rev1-btaRAandAAandTTPv1-Failure-Failure">
															
															<copy>
																<from>true()</from>
																<to variable="isFinished" />	
																
															</copy>
														</assign>
													 	
													</scope>
													
												</if>
											</sequence>
										</while>
									 	
									</scope>
									
								</if>
							</sequence>
						</while>
					</sequence>
				 	
				</scope>
			</sequence>
		 	
		</scope>
		<exit name="rev1-btaRAandAAandTTPv1_exit" />
	</sequence>
</process>
